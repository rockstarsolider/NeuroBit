# Generated by Django 5.2.3 on 2025-07-22 14:33

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Learner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=120)),
                ('last_name', models.CharField(max_length=120)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('N', 'Prefer not to say')], default='N', max_length=1)),
                ('country_code', models.CharField(blank=True, max_length=2)),
                ('signup_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('blocked', 'Blocked')], default='active', max_length=20)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=120)),
                ('last_name', models.CharField(max_length=120)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('bio', models.TextField(blank=True)),
                ('hire_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('blocked', 'Blocked')], default='active', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=120)),
                ('last_name', models.CharField(max_length=120)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role_code', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('blocked', 'Blocked')], default='active', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120, unique=True)),
                ('description', models.TextField(blank=True)),
                ('price_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency_code', models.CharField(max_length=3)),
                ('duration_months', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EducationalStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sequence_no', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('expected_duration_days', models.PositiveIntegerField(blank=True, null=True)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='courses.learningpath')),
            ],
            options={
                'ordering': ['path_id', 'sequence_no'],
                'unique_together': {('path', 'sequence_no')},
            },
        ),
        migrations.CreateModel(
            name='MentorPathGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('group_name', models.CharField(blank=True, max_length=120)),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentor_groups', to='courses.learningpath')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PathEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('dropped', 'Dropped'), ('paused', 'Paused')], default='active', max_length=20)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='path_enrollments', to='courses.learner')),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='courses.learningpath')),
            ],
            options={
                'unique_together': {('learner', 'path')},
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('resource_type', models.CharField(choices=[('video', 'Video'), ('article', 'Article'), ('repo', 'Repository'), ('file', 'File'), ('other', 'Other')], max_length=20)),
                ('url_or_location', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='courses.educationalstep')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('starts_at', models.DateTimeField()),
                ('ends_at', models.DateTimeField()),
                ('link', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('meeting_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sessions', to='courses.meetingtype')),
                ('mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='courses.mentor')),
                ('mentor_path_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='courses.mentorpathgroup')),
                ('path_enrollment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='courses.pathenrollment')),
                ('step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='courses.educationalstep')),
                ('created_by_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_sessions', to='courses.staff')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('platform', models.CharField(choices=[('rocket_chat', 'Rocket.Chat'), ('linkedin', 'LinkedIn'), ('other', 'Other')], default='other', max_length=30)),
                ('url', models.TextField()),
                ('posted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_posts', to='courses.learner')),
                ('step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='social_posts', to='courses.educationalstep')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MentorSpecialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.mentor')),
                ('specialty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.specialty')),
            ],
            options={
                'unique_together': {('mentor', 'specialty')},
            },
        ),
        migrations.AddField(
            model_name='mentor',
            name='specialties',
            field=models.ManyToManyField(blank=True, related_name='mentors', through='courses.MentorSpecialty', to='courses.specialty'),
        ),
        migrations.CreateModel(
            name='StepProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initial_due_date', models.DateField(blank=True, null=True)),
                ('initial_promise_days', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('done', 'Done')], default='not_started', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='step_progress', to='courses.learner')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='courses.educationalstep')),
            ],
            options={
                'unique_together': {('learner', 'step')},
            },
        ),
        migrations.CreateModel(
            name='StepExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extended_by_days', models.PositiveIntegerField()),
                ('requested_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_by_mentor', models.BooleanField(default=False)),
                ('reason', models.TextField(blank=True)),
                ('progress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extensions', to='courses.stepprogress')),
            ],
            options={
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='LearnerSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('price_paid', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency_code', models.CharField(max_length=3)),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='courses.learner')),
                ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscriptions', to='courses.subscriptionplan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('order_in_step', models.PositiveIntegerField()),
                ('is_required', models.BooleanField(default=True)),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='courses.educationalstep')),
            ],
            options={
                'ordering': ['step_id', 'order_in_step'],
                'unique_together': {('step', 'order_in_step')},
            },
        ),
        migrations.CreateModel(
            name='TaskSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('artifact_url_or_file', models.TextField()),
                ('comment', models.TextField(blank=True)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_submissions', to='courses.learner')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='courses.task')),
            ],
            options={
                'unique_together': {('task', 'learner')},
            },
        ),
        migrations.CreateModel(
            name='TaskEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.CharField(choices=[('poor', 'Poor'), ('ok', 'OK'), ('good', 'Good'), ('high', 'High')], max_length=10)),
                ('evaluated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('feedback', models.TextField(blank=True)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_evaluations', to='courses.mentor')),
                ('task_submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation', to='courses.tasksubmission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url_or_file', models.TextField()),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_submissions', to='courses.learner')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_submissions', to='courses.educationalstep')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MentorPathGroupRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('primary', 'Primary'), ('assistant', 'Assistant')], default='primary', max_length=20)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_roles', to='courses.mentor')),
                ('mentor_path_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentor_roles', to='courses.mentorpathgroup')),
            ],
            options={
                'unique_together': {('mentor_path_group', 'mentor')},
            },
        ),
        migrations.CreateModel(
            name='MentorGroupLearner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('mentor_path_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learners', to='courses.mentorpathgroup')),
                ('path_enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to='courses.pathenrollment')),
            ],
            options={
                'unique_together': {('mentor_path_group', 'path_enrollment')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused')], default='present', max_length=20)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='courses.learner')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='courses.session')),
            ],
            options={
                'unique_together': {('session', 'learner')},
            },
        ),
    ]
